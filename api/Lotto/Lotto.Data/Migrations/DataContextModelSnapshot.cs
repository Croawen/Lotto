// <auto-generated />
using System;
using Lotto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lotto.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lotto.Data.Entities.RollEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsFinished");

                    b.Property<int?>("PreviousRollId");

                    b.Property<DateTimeOffset>("RollDate");

                    b.Property<double?>("WinningLat");

                    b.Property<double?>("WinningLng");

                    b.HasKey("Id");

                    b.ToTable("Rolls");
                });

            modelBuilder.Entity("Lotto.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lotto.Data.Entities.UserRollEntity", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RollId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<bool>("HasWon");

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.HasKey("UserId", "RollId");

                    b.HasIndex("RollId");

                    b.ToTable("UserRolls");
                });

            modelBuilder.Entity("Lotto.Data.Entities.UserRollEntity", b =>
                {
                    b.HasOne("Lotto.Data.Entities.RollEntity", "Roll")
                        .WithMany("Participants")
                        .HasForeignKey("RollId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lotto.Data.Entities.UserEntity", "User")
                        .WithMany("UserRolls")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
